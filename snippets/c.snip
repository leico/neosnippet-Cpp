#### char
snippet ''
alias   char_literal
abbr    charactor
  '${1:#:charactor}'${0}


#### string
snippet ""
alias   string_literal
abbr    string
  "${1:#:string}"${0}


#### array
snippet []
alias   array_literal
options indent
abbr    array
  [ ${1:#:number or contents} ]${0}


#### block
snippet {}
alias   block_literal
options indent
abbr    block/struct
  { ${1:#:contents} }${0}




#### bracket
snippet ()
alias   bracket_literal
options indent
abbr    bracket
  ( ${1:#:contents} )${0}



#### angle bracket
snippet <>
alias   angle_bracket_literal
options indent
abbr    angle bracket literal
  < ${1:#:contents} >${0}



#### conditional operator
snippet ?
  ? ${1:#:true state} : ${2:#:false state};${0}




#### include 
snippet #inc
alias   inc
options head
abbr    C style include
  #include ${1:#:header file}${0} 




#### prefix

snippet const
alias   con
abbr    const prefix
  const ${0}


snippet static
alias   sta
abbr    static prefix
  static ${0}


snippet extern
alias   ext
abbr    extern prefix
  extern ${0}






#### break continue
snippet break
abbr    break statement
  break;${0}

snippet continue
abbr    continue statement
  continue;${0}






#### sizeof
snippet sizeof
alias   size
  sizeof( ${1:#:type} )${0}


#### comment
snippet /*
alias /**/, comment
abbr    comment
  /* ${1:#:comment} */



#### return statement
snippet return
abbr    return statement
  return ${0};


#### functions

snippet function
alias   func
abbr    function declaration
  ${1:#:type} ${2:#:function name} ( ${3:#:args} ) ${4:#:process}




#### if else elseif statement

## if
snippet if
options head
abbr    single line if statement
  if( ${1:#:condition} ) ${2:#:process}





## else
snippet else 
options head
abbr    single line else statement 
  else ${1:#:process}






## else if
snippet     elseif 
abbr        single line else if statement 
options     head
  else if ( ${1:#:conditional} ) ${2:#:process}






#### switch case default statement
## switch
snippet switch
options head
abbr    switch statement
  switch( ${1:#:value} ) 



## case
snippet case
options head
abbr    case statement
  case ${1:#:value} : ${2:#:process}




## default
snippet default
options head
abbr    default statement
  default : ${1:#:process}



#### for statement

snippet for
options head
abbr    single line for statement
  for( ${1:#:initialize} ; ${2:#:conditional} ; ${3:#:transition} ) ${4:#:process}


#### while statement
snippet while
options head
abbr    single line while statement
  while( ${1:#:conditional} ) ${2:#:process}




#### do-while statement
snippet do-while
alias   do
options head
abbr    do-while statement
  do ${2:#:process} while ( ${1:#:conditional} );








#### struct statement
snippet struct
abbr    struct instance statement
  struct ${1:#:typename} ${2:#:variable_or_process}${0}






#### enum statement
snippet enum
abbr    enum instance statement
  enum ${1:#:typename} ${2:#:variable_or_process} ${0}







#### typedef statement
snippet typedef
options head
abbr    typedef statement
  typedef ${1:#:typename} ${2:#:new typename};${0}







#### #ifndef ... #define ... #endif
snippet #ifndef
alias   #ifn
options head
abbr    include guard literal
  #ifndef $1
  #define ${1:#:SYMBOL}
  #endif /* #ifndef $1 */






